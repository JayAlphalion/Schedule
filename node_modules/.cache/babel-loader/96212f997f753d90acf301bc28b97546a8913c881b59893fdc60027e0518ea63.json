{"ast":null,"code":"var _jsxFileName = \"/Users/hemantsingh/code/SCHwire1.1/schwire1811/src/components/DateLoad.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport Loading from './Loading';\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DateLoad = _ref => {\n  _s();\n  let {\n    items\n  } = _ref;\n  let dataJSX = [];\n  // let data=items;\n  // } team={el.team} PU_date={el.PU_date} solo={el.solo} inputcity={el.inputcity} trucks={el.trucksd} />\n\n  let {\n    load,\n    team,\n    PU_date,\n    solo,\n    inputcity,\n    trucks\n  } = items;\n\n  // console.log(\"date : \",PU_date);\n  console.log(\"loads  dateload : \", items);\n  // console.log(\"trucks  : \",trucks);\n\n  let [loads, setloads] = useState({\n    sloads: {},\n    tloads: {},\n    strucks: {},\n    ttrucks: {}\n  });\n\n  // let [teamloads,setteamloads]=useState([]);\n\n  // console.log(\"Dateload\");\n\n  // console.log(\"len :\",items.length);\n  // console.log(\"el : \",items);\n\n  var render = async () => {\n    console.log(\"runnig \");\n    if (items != undefined) {\n      let sloads = [];\n      let tloads = [];\n\n      //   if(load!=undefined){\n      // await load.map((el)=>{\n      //   var count = Object.keys(el).length;\n\n      //   if(count==0)\n      //   {\n      //     console.log(\"zero\");\n      //     return(<></>)\n      //   }else{\n\n      //     console.log(\"el  : \",el.data.load_type);\n\n      //       if(el.data.load_type=='Solo'){\n      //       sloads.push(el);\n      //       }else{\n      //           tloads.push(el);\n      //       }\n\n      //   }\n      //  }) \n      // }\n\n      let strucks = [];\n      let ttrucks = [];\n\n      // if(trucks!=undefined){\n      //     await trucks.map((el)=>{\n      //     var count = Object.keys(el).length;\n\n      //     if(count==0)\n      //     {console.log(\"zero\");\n      //       return(<></>)\n      //     }else{\n      // //    console.log(\"el : \",el);\n      //         // if(el.truck_info!=undefined && el.truck_info.Truck_type!=undefined &&el.truck_info.Truck_type=='Solo'){\n      //         // strucks.push(el);\n      //         // }else{\n      //         //     ttrucks.push(el);\n      //         // }\n\n      //     }\n      //      })\n      //     }\n\n      console.log(\"sstrucks : \", strucks);\n      console.log(\"ttrucks : \", ttrucks);\n      setloads({\n        sloads: sloads,\n        tloads: tloads,\n        strucks: strucks,\n        ttrucks: ttrucks\n      });\n    }\n  };\n  useEffect(() => {\n    render();\n  }, [items]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Loading, {\n      sololoads: loads.sloads,\n      PU_date: PU_date,\n      teamloads: loads.tloads,\n      inputcity: inputcity,\n      strucks: loads.strucks,\n      ttrucks: loads.ttrucks\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 5\n  }, this);\n};\n_s(DateLoad, \"hBqhW0auI4D9TdVwD4KlvWUU3cg=\");\n_c = DateLoad;\nexport default DateLoad;\nvar _c;\n$RefreshReg$(_c, \"DateLoad\");","map":{"version":3,"names":["useEffect","useState","Loading","React","DateLoad","items","dataJSX","load","team","PU_date","solo","inputcity","trucks","console","log","loads","setloads","sloads","tloads","strucks","ttrucks","render","undefined"],"sources":["/Users/hemantsingh/code/SCHwire1.1/schwire1811/src/components/DateLoad.js"],"sourcesContent":["import { useEffect, useState } from 'react';\r\nimport Loading from './Loading'\r\nimport React from 'react';\r\n\r\nconst DateLoad = ({items}) => {\r\n\r\n    let dataJSX=[];\r\n    // let data=items;\r\n    // } team={el.team} PU_date={el.PU_date} solo={el.solo} inputcity={el.inputcity} trucks={el.trucksd} />\r\n    \r\n    let{load,team,PU_date,solo,inputcity,trucks}=items;\r\n    \r\n    // console.log(\"date : \",PU_date);\r\n    console.log(\"loads  dateload : \",items);\r\n    // console.log(\"trucks  : \",trucks);\r\n    \r\n    let [loads,setloads]=useState({sloads:{},tloads:{},strucks:{},ttrucks:{}});\r\n\r\n    // let [teamloads,setteamloads]=useState([]);\r\n\r\n    // console.log(\"Dateload\");\r\n\r\n    // console.log(\"len :\",items.length);\r\n    // console.log(\"el : \",items);\r\n\r\n    var render=async ()=>{\r\n\r\n      console.log(\"runnig \");\r\n\r\n        if(items!=undefined){\r\n\r\n            let sloads=[];\r\n            let tloads=[];\r\n\r\n          //   if(load!=undefined){\r\n          // await load.map((el)=>{\r\n          //   var count = Object.keys(el).length;\r\n\r\n          //   if(count==0)\r\n          //   {\r\n          //     console.log(\"zero\");\r\n          //     return(<></>)\r\n          //   }else{\r\n              \r\n          //     console.log(\"el  : \",el.data.load_type);\r\n\r\n          //       if(el.data.load_type=='Solo'){\r\n          //       sloads.push(el);\r\n          //       }else{\r\n          //           tloads.push(el);\r\n          //       }\r\n\r\n          //   }\r\n          //  }) \r\n          // }\r\n       \r\n            let strucks=[];\r\n            let ttrucks=[];\r\n\r\n            // if(trucks!=undefined){\r\n      //     await trucks.map((el)=>{\r\n      //     var count = Object.keys(el).length;\r\n\r\n      //     if(count==0)\r\n      //     {console.log(\"zero\");\r\n      //       return(<></>)\r\n      //     }else{\r\n      // //    console.log(\"el : \",el);\r\n      //         // if(el.truck_info!=undefined && el.truck_info.Truck_type!=undefined &&el.truck_info.Truck_type=='Solo'){\r\n      //         // strucks.push(el);\r\n      //         // }else{\r\n      //         //     ttrucks.push(el);\r\n      //         // }\r\n\r\n      //     }\r\n      //      })\r\n      //     }\r\n\r\n          console.log(\"sstrucks : \",strucks );\r\n          console.log(\"ttrucks : \",ttrucks);\r\n        \r\n         setloads({\r\n            sloads:sloads,\r\n            tloads:tloads,\r\n            strucks:strucks,\r\n            ttrucks:ttrucks\r\n        })\r\n\r\n       }\r\n    }\r\n\r\n     useEffect(()=>{\r\n      render()\r\n     },[items])\r\n    \r\n    \r\n\r\n  return(\r\n    <div>\r\n    <Loading sololoads={loads.sloads} PU_date={PU_date} teamloads={loads.tloads} inputcity={inputcity} strucks={loads.strucks} ttrucks={loads.ttrucks} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default DateLoad;"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAOC,OAAO,MAAM,WAAW;AAC/B,OAAOC,KAAK,MAAM,OAAO;AAAC;AAE1B,MAAMC,QAAQ,GAAG,QAAa;EAAA;EAAA,IAAZ;IAACC;EAAK,CAAC;EAErB,IAAIC,OAAO,GAAC,EAAE;EACd;EACA;;EAEA,IAAG;IAACC,IAAI;IAACC,IAAI;IAACC,OAAO;IAACC,IAAI;IAACC,SAAS;IAACC;EAAM,CAAC,GAACP,KAAK;;EAElD;EACAQ,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAACT,KAAK,CAAC;EACvC;;EAEA,IAAI,CAACU,KAAK,EAACC,QAAQ,CAAC,GAACf,QAAQ,CAAC;IAACgB,MAAM,EAAC,CAAC,CAAC;IAACC,MAAM,EAAC,CAAC,CAAC;IAACC,OAAO,EAAC,CAAC,CAAC;IAACC,OAAO,EAAC,CAAC;EAAC,CAAC,CAAC;;EAE1E;;EAEA;;EAEA;EACA;;EAEA,IAAIC,MAAM,GAAC,YAAU;IAEnBR,OAAO,CAACC,GAAG,CAAC,SAAS,CAAC;IAEpB,IAAGT,KAAK,IAAEiB,SAAS,EAAC;MAEhB,IAAIL,MAAM,GAAC,EAAE;MACb,IAAIC,MAAM,GAAC,EAAE;;MAEf;MACA;MACA;;MAEA;MACA;MACA;MACA;MACA;;MAEA;;MAEA;MACA;MACA;MACA;MACA;;MAEA;MACA;MACA;;MAEE,IAAIC,OAAO,GAAC,EAAE;MACd,IAAIC,OAAO,GAAC,EAAE;;MAEd;MACN;MACA;;MAEA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;;MAEA;MACA;MACA;;MAEIP,OAAO,CAACC,GAAG,CAAC,aAAa,EAACK,OAAO,CAAE;MACnCN,OAAO,CAACC,GAAG,CAAC,YAAY,EAACM,OAAO,CAAC;MAElCJ,QAAQ,CAAC;QACNC,MAAM,EAACA,MAAM;QACbC,MAAM,EAACA,MAAM;QACbC,OAAO,EAACA,OAAO;QACfC,OAAO,EAACA;MACZ,CAAC,CAAC;IAEH;EACH,CAAC;EAEApB,SAAS,CAAC,MAAI;IACbqB,MAAM,EAAE;EACT,CAAC,EAAC,CAAChB,KAAK,CAAC,CAAC;EAIb,oBACE;IAAA,uBACA,QAAC,OAAO;MAAC,SAAS,EAAEU,KAAK,CAACE,MAAO;MAAC,OAAO,EAAER,OAAQ;MAAC,SAAS,EAAEM,KAAK,CAACG,MAAO;MAAC,SAAS,EAAEP,SAAU;MAAC,OAAO,EAAEI,KAAK,CAACI,OAAQ;MAAC,OAAO,EAAEJ,KAAK,CAACK;IAAQ;MAAA;MAAA;MAAA;IAAA;EAAG;IAAA;IAAA;IAAA;EAAA,QAC/I;AAEV,CAAC;AAAA,GAlGKhB,QAAQ;AAAA,KAARA,QAAQ;AAoGd,eAAeA,QAAQ;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}